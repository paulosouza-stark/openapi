{
    "openapi": "3.1.0",
    "info": {
      "version": "v2",
      "title": "Stark Bank API",
      "summary": "",
      "description": "Stark Bank API for financial services in Brazil.",
      "contact": {
        "email": "help@starkbank.com",
        "name": "Stark Bank Developers",
        "url": "https://starkbank.com"
      },
      "license": {
        "name": "Stark Bank License"
      }
    },
    "servers": [
      {
        "url": "https://sandbox.api.starkbank.com/",
        "description": "Sandbox Environment"
      },
      {
        "url": "https://api.starkbank.com/",
        "description": "Production Environment"
      }
    ],
    "paths": {
      "/transaction": {
        "post": {
          "tags": [
            "transaction"
          ],
          "summary": "Create transactionsABCDE",
          "description": "",
          "operationId": "createTransaction",
          "requestBody": {
            "description": "Transactions to be created",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transactions"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Created transactions",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Transactions"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        },
        "get": {
          "tags": [
            "transaction"
          ],
          "summary": "List transactions",
          "operationId": "listTransactions",
          "parameters": [
            {
              "name": "cursor",
              "in": "query",
              "description": "String used to get the next batch of results.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results per cursor. Max = 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              }
            },
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Filter entities created after this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Filter entities created before this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "tags",
              "in": "query",
              "description": "Filter entities that contain the specified tags.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "externalIds",
              "in": "query",
              "description": "List of strings to get specific entities by externalIds.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of transactions and the next page cursor",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Transactions"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/transaction/{transactionId}": {
        "get": {
          "tags": [
            "transaction"
          ],
          "summary": "Get transaction by ID",
          "operationId": "getTransaction",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "transactionId",
              "in": "path",
              "description": "Transaction unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updated transaction json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TransactionInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/balance": {
        "get": {
          "tags": [
            "balance"
          ],
          "summary": "Get balances",
          "description": "Get the current balance in your workspace.",
          "operationId": "listBalances",
          "responses": {
            "200": {
              "description": "An array of balances and the next page cursor",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Balances"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/v2/transfer": {
        "post": {
          "tags": [
            "Transfer"
          ],
          "summary": "Create transfers",
          "operationId": "createTransfers",
          "requestBody": {
            "description": "Transfers to be created",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transfers"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Created transfers",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Transfers"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        },
        "get": {
          "tags": [
            "Transfer"
          ],
          "summary": "List transfers",
          "operationId": "listTransfers",
          "parameters": [
            {
              "name": "cursor",
              "in": "query",
              "description": "String used to get the next batch of results.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results per cursor. Max = 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              }
            },
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Filter entities created after this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Filter entities created before this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "transactionIds",
              "in": "query",
              "description": "Filter entities that are linked to the specified transactions.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "Filter boletos by the specified status.",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "taxId",
              "in": "query",
              "description": "Filter transfers sent to the specified taxId.",
              "required": false,
              "schema": {
                "type": "string",
                "pattern": "^((\\d{3}\\.\\d{3}\\.\\d{3}\\-\\d{2})|(\\d{11})|(\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}\\-\\d{2})|(\\d{14}))$"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Sort entities by the specified sort order. Options are \"-created\", \"created\", \"-updated\", \"updated\".",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "tags",
              "in": "query",
              "description": "Filter entities that contain the specified tags.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "List of strings to get specific entities by ids.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of transfers and the next page cursor",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Transfers"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/v2/transfer/{transferId}": {
        "get": {
          "tags": [
            "Transfer"
          ],
          "summary": "Get transfer by ID",
          "operationId": "getTransfer",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "transferId",
              "in": "path",
              "description": "Transfer unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updated transfer json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TransferInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/v2/transfer/{transferId}/pdf": {
        "get": {
          "tags": [
            "Transfer"
          ],
          "summary": "Get transfer PDF receipt by ID",
          "operationId": "getTransferPDF",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "transferId",
              "in": "path",
              "description": "Transfer unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Transfer PDF receipt blob",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string",
                    "contentMediaType": "application/octet-stream"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/v2/transfer/log": {
        "get": {
          "tags": [
            "Transfer"
          ],
          "summary": "List transfer logs",
          "operationId": "listTransferLogs",
          "parameters": [
            {
              "name": "cursor",
              "in": "query",
              "description": "String used to get the next batch of results.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results per cursor. Max = 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              }
            },
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Filter entities created after this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Filter entities created before this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "types",
              "in": "query",
              "description": "Filter logs by log types.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "transferIds",
              "in": "query",
              "description": "Array of transfer ids that are linked to the desired logs.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of transfer logs and the next page cursor",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TransferLogs"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/v2/transfer/log/{logId}": {
        "get": {
          "tags": [
            "Transfer"
          ],
          "summary": "Get transfer log by ID",
          "operationId": "getTransferLog",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "logId",
              "in": "path",
              "description": "Log unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updated transfer log json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TransferLogInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/invoice": {
        "post": {
          "tags": [
            "invoice"
          ],
          "summary": "Create invoices",
          "operationId": "createInvoices",
          "requestBody": {
            "description": "Invoices to be created",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoices"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Created invoices",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Invoices"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        },
        "get": {
          "tags": [
            "invoice"
          ],
          "summary": "List invoices",
          "operationId": "listInvoices",
          "parameters": [
            {
              "name": "cursor",
              "in": "query",
              "description": "String used to get the next batch of results.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results per cursor. Max = 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              }
            },
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Filter entities created after this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Filter entities created before this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "Filter invoices by the specified status.",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "tags",
              "in": "query",
              "description": "Filter entities that contain the specified tags.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "List of strings to get specific entities by ids.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of invoices and the next page cursor",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Invoices"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/invoice/{invoiceId}": {
        "get": {
          "tags": [
            "invoice"
          ],
          "summary": "Get invoice by ID",
          "operationId": "getInvoice",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "invoiceId",
              "in": "path",
              "description": "Invoice unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updated invoice json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InvoiceInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        },
        "patch": {
          "tags": [
            "invoice"
          ],
          "summary": "Update or refund an invoice by ID",
          "operationId": "patchInvoice",
          "parameters": [
            {
              "name": "invoiceId",
              "in": "path",
              "description": "Invoice unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "requestBody": {
            "description": "Invoice fields to be patched",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicePatch"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Updated invoice json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InvoiceInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/invoice/{invoiceId}/pdf": {
        "get": {
          "tags": [
            "invoice"
          ],
          "summary": "Get invoice PDF by ID",
          "operationId": "getInvoicePDF",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "invoiceId",
              "in": "path",
              "description": "Invoice unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Invoice QR code",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string",
                    "contentMediaType": "application/octet-stream"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/invoice/{invoiceId}/qrcode": {
        "get": {
          "tags": [
            "invoice"
          ],
          "summary": "Get invoice QR Code by ID",
          "operationId": "getInvoiceQRCode",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "format",
              "in": "query",
              "description": "output file format",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "invoiceId",
              "in": "path",
              "description": "Invoice unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Invoice QR code",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string",
                    "contentMediaType": "application/octet-stream"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/invoice/log": {
        "get": {
          "tags": [
            "invoice"
          ],
          "summary": "List invoice logs",
          "operationId": "listInvoiceLogs",
          "parameters": [
            {
              "name": "cursor",
              "in": "query",
              "description": "String used to get the next batch of results.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results per cursor. Max = 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              }
            },
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Filter entities created after this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Filter entities created before this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "types",
              "in": "query",
              "description": "Filter logs by log types.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "invoiceIds",
              "in": "query",
              "description": "Array of invoice ids that are linked to the desired logs.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of invoice logs and the next page cursor",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InvoiceLogs"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/invoice/log/{logId}": {
        "get": {
          "tags": [
            "invoice"
          ],
          "summary": "Get invoice log by ID",
          "operationId": "getInvoiceLog",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "logId",
              "in": "path",
              "description": "Log unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updated invoice log json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InvoiceLogInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/deposit": {
        "get": {
          "tags": [
            "deposit"
          ],
          "summary": "List deposits",
          "operationId": "listDeposits",
          "parameters": [
            {
              "name": "cursor",
              "in": "query",
              "description": "String used to get the next batch of results.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results per cursor. Max = 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              }
            },
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Filter entities created after this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Filter entities created before this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "Filter deposits by the specified status.",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "tags",
              "in": "query",
              "description": "Filter entities that contain the specified tags.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "List of strings to get specific entities by ids.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Sort entities by the specified sort order. Options are \"-created\" and \"created\".",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of deposits and the next page cursor",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Deposits"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/deposit/{depositId}": {
        "get": {
          "tags": [
            "deposit"
          ],
          "summary": "Get deposit by ID",
          "operationId": "getDeposit",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "depositId",
              "in": "path",
              "description": "Deposit unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updated deposit json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DepositInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/deposit/log": {
        "get": {
          "tags": [
            "deposit"
          ],
          "summary": "List deposit logs",
          "operationId": "listDepositLogs",
          "parameters": [
            {
              "name": "cursor",
              "in": "query",
              "description": "String used to get the next batch of results.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results per cursor. Max = 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              }
            },
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Filter entities created after this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Filter entities created before this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "types",
              "in": "query",
              "description": "Filter logs by log types.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "depositIds",
              "in": "query",
              "description": "Array of deposit ids that are linked to the desired logs.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of deposit logs and the next page cursor",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DepositLogs"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/deposit/log/{logId}": {
        "get": {
          "tags": [
            "deposit"
          ],
          "summary": "Get deposit log by ID",
          "operationId": "getDepositLog",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "logId",
              "in": "path",
              "description": "Log unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updated deposit log json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DepositLogInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/boleto": {
        "post": {
          "tags": [
            "Boleto"
          ],
          "summary": "Create boletos",
          "description": "This is how you create a new list of boletos. You can create up to 100 boletos per request. In case a boleto is paid after its due date and there is fine or interest, its amount will be updated with the paid amount. The same is valid if the boleto is paid with a discount.",
          "operationId": "createBoletos",
          "requestBody": {
            "description": "Boletos to be created",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Boletos"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Created boletos",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Boletos"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        },
        "get": {
          "tags": [
            "Boleto"
          ],
          "summary": "List boletos",
          "operationId": "listBoletos",
          "parameters": [
            {
              "name": "cursor",
              "in": "query",
              "description": "String used to get the next batch of results.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results per cursor. Max = 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              }
            },
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Filter entities created after this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Filter entities created before this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "Filter boletos by the specified status.",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "tags",
              "in": "query",
              "description": "Filter entities that contain the specified tags.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "List of strings to get specific entities by ids.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of boletos and the next page cursor",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Boletos"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/boleto/{boletoId}": {
        "get": {
          "tags": [
            "Boleto"
          ],
          "summary": "Get boleto by ID",
          "operationId": "getBoleto",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "boletoId",
              "in": "path",
              "description": "Boleto unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updated boleto json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BoletoInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        },
        "delete": {
          "tags": [
            "Boleto"
          ],
          "summary": "Cancel and delete a boleto by ID",
          "operationId": "cancelAndDeleteBoleto",
          "parameters": [
            {
              "name": "boletoId",
              "in": "path",
              "description": "Boleto unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Canceled/Deleted boleto json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BoletoInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/boleto/{boletoId}/pdf": {
        "get": {
          "tags": [
            "Boleto"
          ],
          "summary": "Get boleto PDF by ID",
          "operationId": "getBoletoPDF",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "boletoId",
              "in": "path",
              "description": "Boleto unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Boleto PDF blob",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string",
                    "contentMediaType": "application/octet-stream"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/boleto/log": {
        "get": {
          "tags": [
            "Boleto"
          ],
          "summary": "List boleto logs",
          "operationId": "listBoletoLogs",
          "parameters": [
            {
              "name": "cursor",
              "in": "query",
              "description": "String used to get the next batch of results.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results per cursor. Max = 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              }
            },
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Filter entities created after this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Filter entities created before this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "types",
              "in": "query",
              "description": "Filter logs by log types.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "boletoIds",
              "in": "query",
              "description": "Array of boleto ids that are linked to the desired logs.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of boleto logs and the next page cursor",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BoletoLogs"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/boleto/log/{logId}": {
        "get": {
          "tags": [
            "Boleto"
          ],
          "summary": "Get boleto log by ID",
          "operationId": "getBoletoLog",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "logId",
              "in": "path",
              "description": "Log unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updated boleto log json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BoletoLogInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/boleto-holmes": {
        "post": {
          "tags": [
            "boletoHolmes"
          ],
          "summary": "Create boleto holmes",
          "operationId": "createBoletoHolmes",
          "requestBody": {
            "description": "Holmes to be created",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoletoHolmes"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Created boleto holmes",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BoletoHolmes"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        },
        "get": {
          "tags": [
            "boletoHolmes"
          ],
          "summary": "List boleto holmes",
          "operationId": "listBoletoHolmes",
          "parameters": [
            {
              "name": "cursor",
              "in": "query",
              "description": "String used to get the next batch of results.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results per cursor. Max = 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              }
            },
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Filter entities created after this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Filter entities created before this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "tags",
              "in": "query",
              "description": "Filter entities that contain the specified tags.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "List of strings to get specific entities by ids.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "Filter holmes by the specified status.",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "boletoId",
              "in": "query",
              "description": "Filter holmes by the specified boleto.",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of holmes and the next page cursor",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BoletoHolmes"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/boleto-holmes/{holmesId}": {
        "get": {
          "tags": [
            "boletoHolmes"
          ],
          "summary": "Get boleto holmes by ID",
          "operationId": "getBoletoHolmes",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "holmesId",
              "in": "path",
              "description": "Holmes unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updated holmes json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BoletoHolmesInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/boleto-holmes/log": {
        "get": {
          "tags": [
            "boletoHolmes"
          ],
          "summary": "List boleto holmes logs",
          "operationId": "listBoletoHolmesLogs",
          "parameters": [
            {
              "name": "cursor",
              "in": "query",
              "description": "String used to get the next batch of results.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results per cursor. Max = 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              }
            },
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Filter entities created after this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Filter entities created before this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "types",
              "in": "query",
              "description": "Filter logs by log types.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "holmesIds",
              "in": "query",
              "description": "Array of holmes ids that are linked to the desired logs.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of holmes logs and the next page cursor",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BoletoHolmesLogs"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/boleto-holmes/log/{logId}": {
        "get": {
          "tags": [
            "boletoHolmes"
          ],
          "summary": "Get boleto holmes log by ID",
          "operationId": "getBoletoHolmesLog",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "logId",
              "in": "path",
              "description": "Log unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updated holmes log json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BoletoHolmesLogInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/brcode-preview": {
        "get": {
          "tags": [
            "brcodePreview"
          ],
          "summary": "Process BR Codes before creating BrcodePayments",
          "operationId": "ListBrcodePreviews",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "brcodes",
              "in": "query",
              "description": "List of BR Codes to be processed.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of previews",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BrcodePreviews"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/brcode-payment": {
        "post": {
          "tags": [
            "brcodePayment"
          ],
          "summary": "Create BR Code payments",
          "operationId": "createBrcodePayments",
          "requestBody": {
            "description": "Payments to be created",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrcodePayments"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Created BR Code payments",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BrcodePayments"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        },
        "get": {
          "tags": [
            "brcodePayment"
          ],
          "summary": "List BR Code payments",
          "operationId": "listBrcodePayments",
          "parameters": [
            {
              "name": "cursor",
              "in": "query",
              "description": "String used to get the next batch of results.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results per cursor. Max = 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              }
            },
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Filter entities created after this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Filter entities created before this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "tags",
              "in": "query",
              "description": "Filter entities that contain the specified tags.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "List of strings to get specific entities by ids.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "Filter payments by the specified status.",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of payments and the next page cursor",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BrcodePayments"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/brcode-payment/{paymentId}": {
        "get": {
          "tags": [
            "brcodePayment"
          ],
          "summary": "Get BR Code payment by ID",
          "operationId": "getBrcodePayment",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "paymentId",
              "in": "path",
              "description": "Payment unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updated payment json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BrcodePaymentInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        },
        "patch": {
          "tags": [
            "brcodePayment"
          ],
          "summary": "Update a BR Code payment by ID",
          "operationId": "updateBrcodePayment",
          "parameters": [
            {
              "name": "paymentId",
              "in": "path",
              "description": "Payment unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "requestBody": {
            "description": "Payment fields to be patched",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrcodePaymentPatch"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Updated payment json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BrcodePaymentInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/brcode-payment/{paymentId}/pdf": {
        "get": {
          "tags": [
            "brcodePayment"
          ],
          "summary": "Get BR Code payment PDF receipt by payment ID",
          "operationId": "getBrcodePaymentPDF",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "paymentId",
              "in": "path",
              "description": "Payment unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "BR Code payment PDF blob",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string",
                    "contentMediaType": "application/octet-stream"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/brcode-payment/log": {
        "get": {
          "tags": [
            "brcodePayment"
          ],
          "summary": "List BR Code payment logs",
          "operationId": "listBrcodePaymentLogs",
          "parameters": [
            {
              "name": "cursor",
              "in": "query",
              "description": "String used to get the next batch of results.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results per cursor. Max = 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              }
            },
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Filter entities created after this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Filter entities created before this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "types",
              "in": "query",
              "description": "Filter logs by log types.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "paymentIds",
              "in": "query",
              "description": "Array of payment ids that are linked to the desired logs.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of payment logs and the next page cursor",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BrcodePaymentLogs"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/brcode-payment/log/{logId}": {
        "get": {
          "tags": [
            "brcodePayment"
          ],
          "summary": "Get BR Code payment log by ID",
          "operationId": "getBrcodePaymentLog",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "logId",
              "in": "path",
              "description": "Log unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updated payment log json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BrcodePaymentLogInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/boleto-payment": {
        "post": {
          "tags": [
            "boletoPayment"
          ],
          "summary": "Create boleto payments",
          "operationId": "createBoletoPayments",
          "requestBody": {
            "description": "Payments to be created",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoletoPayments"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Created boleto payments",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BoletoPayments"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        },
        "get": {
          "tags": [
            "boletoPayment"
          ],
          "summary": "List boleto payments",
          "operationId": "listBoletoPayments",
          "parameters": [
            {
              "name": "cursor",
              "in": "query",
              "description": "String used to get the next batch of results.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results per cursor. Max = 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              }
            },
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Filter entities created after this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Filter entities created before this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "tags",
              "in": "query",
              "description": "Filter entities that contain the specified tags.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "List of strings to get specific entities by ids.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "Filter payments by the specified status.",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of payments and the next page cursor",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BoletoPayments"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/boleto-payment/{paymentId}": {
        "get": {
          "tags": [
            "boletoPayment"
          ],
          "summary": "Get boleto payment by ID",
          "operationId": "getBoletoPayment",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "paymentId",
              "in": "path",
              "description": "Payment unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updated payment json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BoletoPaymentInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        },
        "delete": {
          "tags": [
            "boletoPayment"
          ],
          "summary": "Cancel and delete a boleto payment by ID",
          "operationId": "cancelAndDeleteBoletoPayment",
          "parameters": [
            {
              "name": "paymentId",
              "in": "path",
              "description": "Payment unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Canceled/Deleted payment json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BoletoPaymentInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/boleto-payment/{paymentId}/pdf": {
        "get": {
          "tags": [
            "boletoPayment"
          ],
          "summary": "Get boleto payment PDF receipt by payment ID",
          "operationId": "getBoletoPaymentPDF",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "paymentId",
              "in": "path",
              "description": "Payment unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Boleto payment PDF blob",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string",
                    "contentMediaType": "application/octet-stream"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/boleto-payment/log": {
        "get": {
          "tags": [
            "boletoPayment"
          ],
          "summary": "List boleto payment logs",
          "operationId": "listBoletoPaymentLogs",
          "parameters": [
            {
              "name": "cursor",
              "in": "query",
              "description": "String used to get the next batch of results.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results per cursor. Max = 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              }
            },
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Filter entities created after this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Filter entities created before this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "types",
              "in": "query",
              "description": "Filter logs by log types.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "paymentIds",
              "in": "query",
              "description": "Array of payment ids that are linked to the desired logs.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of payment logs and the next page cursor",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BoletoPaymentLogs"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/boleto-payment/log/{logId}": {
        "get": {
          "tags": [
            "boletoPayment"
          ],
          "summary": "Get boleto payment log by ID",
          "operationId": "getBoletoPaymentLog",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "logId",
              "in": "path",
              "description": "Log unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updated payment log json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BoletoPaymentLogInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/utility-payment": {
        "post": {
          "tags": [
            "utilityPayment"
          ],
          "summary": "Create utility payments",
          "operationId": "createUtilityPayments",
          "requestBody": {
            "description": "Payments to be created",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilityPayments"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Created utility payments",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UtilityPayments"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        },
        "get": {
          "tags": [
            "utilityPayment"
          ],
          "summary": "List utility payments",
          "operationId": "listUtilityPayments",
          "parameters": [
            {
              "name": "cursor",
              "in": "query",
              "description": "String used to get the next batch of results.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results per cursor. Max = 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              }
            },
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Filter entities created after this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Filter entities created before this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "tags",
              "in": "query",
              "description": "Filter entities that contain the specified tags.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "List of strings to get specific entities by ids.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "Filter payments by the specified status.",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of payments and the next page cursor",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UtilityPayments"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/utility-payment/{paymentId}": {
        "get": {
          "tags": [
            "utilityPayment"
          ],
          "summary": "Get utility payment by ID",
          "operationId": "getUtilityPayment",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "paymentId",
              "in": "path",
              "description": "Payment unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updated payment json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UtilityPaymentInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        },
        "delete": {
          "tags": [
            "utilityPayment"
          ],
          "summary": "Cancel and delete a utility payment by ID",
          "operationId": "cancelAndDeleteUtilityPayment",
          "parameters": [
            {
              "name": "paymentId",
              "in": "path",
              "description": "Payment unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Canceled/Deleted payment json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UtilityPaymentInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/utility-payment/{paymentId}/pdf": {
        "get": {
          "tags": [
            "utilityPayment"
          ],
          "summary": "Get utility payment PDF receipt by payment ID",
          "operationId": "getUtilityPaymentPDF",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "paymentId",
              "in": "path",
              "description": "Payment unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Utility payment PDF receipt blob",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string",
                    "contentMediaType": "application/octet-stream"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/utility-payment/log": {
        "get": {
          "tags": [
            "utilityPayment"
          ],
          "summary": "List utility payment logs",
          "operationId": "listUtilityPaymentLogs",
          "parameters": [
            {
              "name": "cursor",
              "in": "query",
              "description": "String used to get the next batch of results.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results per cursor. Max = 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              }
            },
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Filter entities created after this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Filter entities created before this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "types",
              "in": "query",
              "description": "Filter logs by log types.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "paymentIds",
              "in": "query",
              "description": "Array of payment ids that are linked to the desired logs.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of payment logs and the next page cursor",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UtilityPaymentLogs"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/utility-payment/log/{logId}": {
        "get": {
          "tags": [
            "utilityPayment"
          ],
          "summary": "Get utility payment log by ID",
          "operationId": "getUtilityPaymentLog",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "logId",
              "in": "path",
              "description": "Log unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updated payment log json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UtilityPaymentLogInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/payment-request": {
        "post": {
          "tags": [
            "paymentRequest"
          ],
          "summary": "Create payment requests",
          "operationId": "createPaymentRequests",
          "requestBody": {
            "description": "Requests to be created",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentRequests"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Created payment requests",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaymentRequests"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        },
        "get": {
          "tags": [
            "paymentRequest"
          ],
          "summary": "List payment requests",
          "operationId": "listPaymentRequests",
          "parameters": [
            {
              "name": "centerId",
              "in": "query",
              "description": "Cost center ID that contains the desired PaymentRequests.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            {
              "name": "cursor",
              "in": "query",
              "description": "String used to get the next batch of results.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results per cursor. Max = 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              }
            },
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Filter entities created after this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Filter entities created before this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Sort entities by the specified sort order. Options are \"-created\" and \"-due\".",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "tags",
              "in": "query",
              "description": "Filter entities that contain the specified tags.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "List of strings to get specific entities by ids.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "Filter payments by the specified status.",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "type",
              "in": "query",
              "description": "Filter payments by the specified payment type. Options are \"transfer\", \"brcode-payment\", ...",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of payment requests and the next page cursor",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaymentRequests"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/webhook": {
        "post": {
          "tags": [
            "webhook"
          ],
          "summary": "Create a webhook",
          "operationId": "createWebhook",
          "requestBody": {
            "description": "Webhook to be created",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Created webhook",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Webhook"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        },
        "get": {
          "tags": [
            "webhook"
          ],
          "summary": "List webhooks",
          "operationId": "listWebhooks",
          "parameters": [
            {
              "name": "cursor",
              "in": "query",
              "description": "String used to get the next batch of results.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results per cursor. Max = 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              }
            },
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of webhooks and the next page cursor",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Webhooks"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/webhook/{webhookId}": {
        "get": {
          "tags": [
            "webhook"
          ],
          "summary": "Get webhook by ID",
          "operationId": "getWebhook",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "webhookId",
              "in": "path",
              "description": "Webhook unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updated webhook json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WebhookInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        },
        "delete": {
          "tags": [
            "webhook"
          ],
          "summary": "Delete a webhook by ID",
          "operationId": "cancelAndDeleteWebhook",
          "parameters": [
            {
              "name": "webhookId",
              "in": "path",
              "description": "Webhook unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Deleted webhook json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WebhookInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/event": {
        "get": {
          "tags": [
            "event"
          ],
          "summary": "List webhook events",
          "operationId": "listWebhookEvents",
          "parameters": [
            {
              "name": "cursor",
              "in": "query",
              "description": "String used to get the next batch of results.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results per cursor. Max = 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              }
            },
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of events and the next page cursor",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Events"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/event/{eventId}": {
        "get": {
          "tags": [
            "event"
          ],
          "summary": "Get event by ID",
          "operationId": "getWebhookEvent",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "eventId",
              "in": "path",
              "description": "Event unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updated event json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EventInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        },
        "patch": {
          "tags": [
            "event"
          ],
          "summary": "Update a webhook event by ID",
          "operationId": "updateWebhookEvent",
          "parameters": [
            {
              "name": "eventId",
              "in": "path",
              "description": "Event unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "requestBody": {
            "description": "Event fields to be patched",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventPatch"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Deleted event payment json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EventInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        },
        "delete": {
          "tags": [
            "event"
          ],
          "summary": "Delete a webhook event by ID",
          "operationId": "deleteWebhookEvent",
          "parameters": [
            {
              "name": "eventId",
              "in": "path",
              "description": "Event unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Deleted event json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EventInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/dict-key": {
        "get": {
          "tags": [
            "dictKey"
          ],
          "summary": "List the DICT (Pix) keys associated with your Stark Bank Workspace",
          "operationId": "listDictKeys",
          "parameters": [
            {
              "name": "cursor",
              "in": "query",
              "description": "String used to get the next batch of results.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results per cursor. Max = 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Filter entities created after this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Filter entities created before this date.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "List of strings to get specific entities by ids.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "Filter DictKeys by the specified status.",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "type",
              "in": "query",
              "description": "Filter DictKeys by the specified type. Options are \"cpf\", \"cnpj\", \"email\", \"phone\" and \"evp\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of keys and the next page cursor",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DictKeys"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/dict-key/{keyId}": {
        "get": {
          "tags": [
            "dictKey"
          ],
          "summary": "Get DictKey by ID",
          "operationId": "getDictKey",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "keyId",
              "in": "path",
              "description": "DICT key unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updated DICT key json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DictKeyInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/workspace": {
        "post": {
          "tags": [
            "workspace"
          ],
          "summary": "Create a workspace",
          "description": "Here you can create a brand new Workspace.\n\n**Note**: Only [Organization](https://starkbank.com/docs/api#workspace:~:text=Note%3A%20Only-,Organization,-credentials%20are%20able) credentials are able to create Workspaces.",
          "operationId": "createWorkspace",
          "requestBody": {
            "description": "Workspace to be created",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Created workspace",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Workspace"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        },
        "get": {
          "tags": [
            "workspace"
          ],
          "summary": "List workspaces",
          "description": "Get a list of Workspaces your credentials have access to in chunks of at most 100. If you need smaller chunks, use the limit parameter.",
          "operationId": "listWorkspaces",
          "parameters": [
            {
              "name": "cursor",
              "in": "query",
              "description": "String used to get the next batch of results.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results per cursor. Max = 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              }
            },
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "username",
              "in": "query",
              "description": "Workspace username to be searched.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "Workspace ids to be searched.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of workspaces and the next page cursor",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Workspaces"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/workspace/{workspaceId}": {
        "get": {
          "tags": [
            "workspace"
          ],
          "summary": "Get workspace by ID",
          "description": "Get a single workspace by its id.",
          "operationId": "getWorkspace",
          "parameters": [
            {
              "name": "fields",
              "in": "query",
              "description": "List of strings to filter response JSON keys.",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "workspaceId",
              "in": "path",
              "description": "Workspace unique identifier.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "^\\d{16}$"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updated workspace json",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkspaceInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/public-key": {
        "get": {
          "tags": [
            "publicKey"
          ],
          "summary": "List Public Keys",
          "description": "Get a list of the Stark Bank public keys ordered by creation date from newest to oldest. The most recent public key is the one currently in use by the API. The olders keys can be used to verify older messages.",
          "operationId": "listStarkBankPublicKeys",
          "parameters": [
            {
              "name": "cursor",
              "in": "query",
              "description": "String used to get the next batch of results.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results per cursor. Max = 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of keys and the next page cursor",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PublicKeys"
                  }
                }
              }
            },
            "400": {
              "description": "Input error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error"
            }
          },
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      },
      "/leo": {
        "get": {
          "summary": "Your GET endpoint",
          "operationId": "get-leo",
          "responses": {},
          "servers": [
            {
              "url": "https://sandbox.api.starkbank.com/",
              "description": "Sandbox Environment"
            },
            {
              "url": "https://api.starkbank.com/",
              "description": "Production Environment"
            }
          ]
        }
      }
    },
    "tags": [
      {
        "name": "Balance"
      },
      {
        "name": "Boleto",
        "description": "A boleto is a method you can use to charge your customers or load your Stark Bank account. Here we will teach you how to create and manage boletos.\n\nYou can also split a Boleto between different receivers, you need to create a [Split Receiver](#split-receiver), and add the receiver into the Splits array."
      },
      {
        "name": "Boleto Holmes"
      },
      {
        "name": "Boleto Payment"
      },
      {
        "name": "Brcode Payment"
      },
      {
        "name": "Darf Payment"
      },
      {
        "name": "Deposit"
      },
      {
        "name": "Dict Key"
      },
      {
        "name": "Dynamic Brcode"
      },
      {
        "name": "Event"
      },
      {
        "name": "Institution"
      },
      {
        "name": "Invoice"
      },
      {
        "name": "Payment Preview"
      },
      {
        "name": "Payment Request"
      },
      {
        "name": "Tax Payment"
      },
      {
        "name": "Transaction"
      },
      {
        "name": "Utility Payment"
      },
      {
        "name": "Webhook"
      },
      {
        "name": "Workspace"
      },
      {
        "name": "Transfer",
        "description": "Transfers are used to send money to any bank account in Brazil using the TED or Pix systems.\nHere we will show you how to create and manage them."
      }
    ],
    "externalDocs": {
      "url": "https://starkbank.com/docs/api",
      "description": "StarkBank API documentation"
    },
    "components": {
      "schemas": {
        "Transactions": {
          "type": "object",
          "properties": {
            "transactions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Transaction"
              }
            }
          }
        },
        "Transaction": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true
            },
            "amount": {
              "type": "integer",
              "minimum": 0
            },
            "receiverId": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "externalId": {
              "type": "string"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "senderId": {
              "type": "string",
              "readOnly": true
            },
            "balance": {
              "type": "integer",
              "readOnly": true
            },
            "source": {
              "type": "string",
              "readOnly": true
            },
            "fee": {
              "type": "integer",
              "readOnly": true
            },
            "created": {
              "type": "string",
              "format": "date",
              "readOnly": true
            }
          },
          "required": [
            "amount",
            "receiverId",
            "description",
            "externalId"
          ]
        },
        "Errors": {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "Error": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "readOnly": true
            },
            "message": {
              "type": "string",
              "readOnly": true
            }
          }
        },
        "TransactionInfo": {
          "type": "object",
          "properties": {
            "transaction": {
              "$ref": "#/components/schemas/Transaction"
            }
          }
        },
        "Balances": {
          "type": "object",
          "properties": {
            "balances": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Balance"
              }
            }
          }
        },
        "Balance": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true
            },
            "amount": {
              "type": "integer",
              "readOnly": true
            },
            "currency": {
              "type": "string",
              "readOnly": true
            },
            "updated": {
              "type": "string",
              "format": "date",
              "readOnly": true
            }
          }
        },
        "Transfers": {
          "type": "object",
          "properties": {
            "transfers": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Transfer"
              }
            }
          }
        },
        "Transfer": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true
            },
            "amount": {
              "type": "integer",
              "minimum": 0
            },
            "name": {
              "type": "string"
            },
            "taxId": {
              "type": "string",
              "pattern": "^((\\d{3}\\.\\d{3}\\.\\d{3}\\-\\d{2})|(\\d{11})|(\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}\\-\\d{2})|(\\d{14}))$"
            },
            "bankCode": {
              "type": "string",
              "pattern": "ˆ^\\d{1,8}$"
            },
            "branchCode": {
              "type": "string",
              "pattern": "ˆ^\\d{4}(\\-\\d{1})?$"
            },
            "accountNumber": {
              "type": "string",
              "pattern": "ˆ^\\d{1,20}$|^\\d{1,19}-\\d{1}$"
            },
            "accountType": {
              "type": "string"
            },
            "externalId": {
              "type": "string"
            },
            "scheduled": {
              "type": "string",
              "format": "datetime"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "fee": {
              "type": "integer",
              "readOnly": true
            },
            "transactionIds": {
              "type": "array",
              "readOnly": true,
              "items": {
                "type": "string"
              }
            },
            "status": {
              "type": "string",
              "readOnly": true
            },
            "created": {
              "type": "string",
              "format": "date",
              "readOnly": true
            },
            "updated": {
              "type": "string",
              "format": "date",
              "readOnly": true
            }
          },
          "required": [
            "amount",
            "name",
            "taxId",
            "bankCode",
            "branchCode",
            "accountNumber"
          ]
        },
        "TransferInfo": {
          "type": "object",
          "properties": {
            "transfer": {
              "$ref": "#/components/schemas/Transfer"
            }
          }
        },
        "TransferLogs": {
          "type": "object",
          "properties": {
            "logs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TransferLog"
              }
            }
          }
        },
        "TransferLog": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true
            },
            "created": {
              "type": "string",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "readOnly": true
            },
            "errors": {
              "type": "array",
              "readOnly": true,
              "items": {
                "type": "string"
              }
            },
            "transfer": {
              "$ref": "#/components/schemas/Transfer"
            }
          }
        },
        "TransferLogInfo": {
          "type": "object",
          "properties": {
            "log": {
              "$ref": "#/components/schemas/TransferLog"
            }
          }
        },
        "Invoices": {
          "type": "object",
          "properties": {
            "invoices": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Invoice"
              }
            }
          }
        },
        "Invoice": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true
            },
            "name": {
              "type": "string"
            },
            "taxId": {
              "type": "string",
              "pattern": "^((\\d{3}\\.\\d{3}\\.\\d{3}\\-\\d{2})|(\\d{11})|(\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}\\-\\d{2})|(\\d{14}))$"
            },
            "amount": {
              "type": "integer"
            },
            "due": {
              "type": "string",
              "format": "datetime"
            },
            "expiration": {
              "type": "integer",
              "minimum": 0,
              "default": 5097600
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "fine": {
              "type": "number",
              "minimum": 0,
              "maximum": 99.9,
              "default": 2
            },
            "interest": {
              "type": "number",
              "minimum": 0,
              "maximum": 99.9,
              "default": 1
            },
            "discounts": {
              "$ref": "#/components/schemas/InvoiceDiscounts"
            },
            "descriptions": {
              "$ref": "#/components/schemas/InvoiceDescriptions"
            },
            "status": {
              "type": "string",
              "readOnly": true
            },
            "fee": {
              "type": "integer",
              "readOnly": true
            },
            "created": {
              "type": "string",
              "format": "date",
              "readOnly": true
            },
            "updated": {
              "type": "string",
              "format": "date",
              "readOnly": true
            }
          },
          "required": [
            "name",
            "taxId",
            "amount"
          ]
        },
        "InvoiceDiscounts": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/InvoiceDiscount"
          }
        },
        "InvoiceDiscount": {
          "type": "object",
          "properties": {
            "due": {
              "type": "string",
              "format": "datetime"
            },
            "percentage": {
              "type": "number"
            }
          },
          "required": [
            "due",
            "percentage"
          ]
        },
        "InvoiceDescriptions": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/InvoiceDescription"
          }
        },
        "InvoiceDescription": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "required": [
            "key",
            "value"
          ]
        },
        "InvoiceInfo": {
          "type": "object",
          "properties": {
            "deposit": {
              "$ref": "#/components/schemas/Invoice"
            }
          }
        },
        "InvoicePatch": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string"
            },
            "amount": {
              "type": "integer"
            },
            "due": {
              "type": "string",
              "format": "datetime"
            },
            "expiration": {
              "type": "integer"
            }
          }
        },
        "InvoiceLogs": {
          "type": "object",
          "properties": {
            "logs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/InvoiceLog"
              }
            }
          }
        },
        "InvoiceLog": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true
            },
            "created": {
              "type": "string",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "readOnly": true
            },
            "errors": {
              "type": "array",
              "readOnly": true,
              "items": {
                "type": "string"
              }
            },
            "invoice": {
              "$ref": "#/components/schemas/Invoice"
            }
          }
        },
        "InvoiceLogInfo": {
          "type": "object",
          "properties": {
            "log": {
              "$ref": "#/components/schemas/InvoiceLog"
            }
          }
        },
        "Deposits": {
          "type": "object",
          "properties": {
            "Deposits": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Deposit"
              }
            }
          }
        },
        "Deposit": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true
            },
            "amount": {
              "type": "integer",
              "minimum": 0,
              "readOnly": true
            },
            "name": {
              "type": "string",
              "readOnly": true
            },
            "taxId": {
              "type": "string",
              "pattern": "^((\\d{3}\\.\\d{3}\\.\\d{3}\\-\\d{2})|(\\d{11})|(\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}\\-\\d{2})|(\\d{14}))$",
              "readOnly": true
            },
            "bankCode": {
              "type": "string",
              "pattern": "ˆ^\\d{1,8}$",
              "readOnly": true
            },
            "branchCode": {
              "type": "string",
              "pattern": "ˆ^\\d{4}(\\-\\d{1})?$",
              "readOnly": true
            },
            "accountNumber": {
              "type": "string",
              "pattern": "ˆ^\\d{1,20}$|^\\d{1,19}-\\d{1}$",
              "readOnly": true
            },
            "accountType": {
              "type": "string",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "readOnly": true
            },
            "tags": {
              "type": "array",
              "readOnly": true,
              "items": {
                "type": "string"
              }
            },
            "fee": {
              "type": "integer",
              "readOnly": true
            },
            "transactionIds": {
              "type": "array",
              "readOnly": true,
              "items": {
                "type": "string"
              }
            },
            "status": {
              "type": "string",
              "readOnly": true
            },
            "created": {
              "type": "string",
              "format": "date",
              "readOnly": true
            },
            "updated": {
              "type": "string",
              "format": "date",
              "readOnly": true
            }
          }
        },
        "DepositInfo": {
          "type": "object",
          "properties": {
            "deposit": {
              "$ref": "#/components/schemas/Deposit"
            }
          }
        },
        "DepositLogs": {
          "type": "object",
          "properties": {
            "logs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DepositLog"
              }
            }
          }
        },
        "DepositLog": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true
            },
            "created": {
              "type": "string",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "readOnly": true
            },
            "errors": {
              "type": "array",
              "readOnly": true,
              "items": {
                "type": "string"
              }
            },
            "Deposit": {
              "$ref": "#/components/schemas/Deposit"
            }
          }
        },
        "DepositLogInfo": {
          "type": "object",
          "properties": {
            "log": {
              "$ref": "#/components/schemas/DepositLog"
            }
          }
        },
        "Boletos": {
          "type": "object",
          "properties": {
            "boletos": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Boleto"
              }
            }
          }
        },
        "Boleto": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true
            },
            "amount": {
              "type": "integer",
              "minimum": 200,
              "maximum": 999999999
            },
            "name": {
              "type": "string"
            },
            "taxId": {
              "type": "string",
              "pattern": "^((\\d{3}\\.\\d{3}\\.\\d{3}\\-\\d{2})|(\\d{11})|(\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}\\-\\d{2})|(\\d{14}))$"
            },
            "streetLine1": {
              "type": "string"
            },
            "streetLine2": {
              "type": "string"
            },
            "disctrict": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "stateCode": {
              "type": "string"
            },
            "zipCode": {
              "type": "string"
            },
            "due": {
              "type": "string",
              "format": "date",
              "default": "today + 2"
            },
            "fine": {
              "type": "number",
              "minimum": 0,
              "maximum": 99.9,
              "default": 2
            },
            "interest": {
              "type": "number",
              "minimum": 0,
              "maximum": 99.9,
              "default": 1
            },
            "overdueLimit": {
              "type": "integer",
              "minimum": 0,
              "maximum": 59,
              "default": 59
            },
            "receiverName": {
              "type": "string",
              "default": "ownerName"
            },
            "receiverTaxId": {
              "type": "string",
              "pattern": "^((\\d{3}\\.\\d{3}\\.\\d{3}\\-\\d{2})|(\\d{11})|(\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}\\-\\d{2})|(\\d{14}))$",
              "default": "ownerTaxId"
            },
            "descriptions": {
              "$ref": "#/components/schemas/BoletoDescriptions"
            },
            "discounts": {
              "$ref": "#/components/schemas/BoletoDiscounts"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "status": {
              "type": "string",
              "readOnly": true
            },
            "created": {
              "type": "string",
              "format": "date",
              "readOnly": true
            }
          },
          "required": [
            "amount",
            "name",
            "taxId",
            "streetLine1",
            "streetLine2",
            "disctrict",
            "city",
            "stateCode",
            "zipCode"
          ]
        },
        "BoletoDescriptions": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/BoletoDescription"
          }
        },
        "BoletoDescription": {
          "type": "object",
          "properties": {
            "text": {
              "type": "string"
            },
            "amount": {
              "type": "integer",
              "minimum": 0
            }
          },
          "required": [
            "text"
          ]
        },
        "BoletoDiscounts": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/BoletoDiscount"
          }
        },
        "BoletoDiscount": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string"
            },
            "percentage": {
              "type": "number"
            }
          },
          "required": [
            "date",
            "percentage"
          ]
        },
        "BoletoInfo": {
          "type": "object",
          "properties": {
            "boleto": {
              "$ref": "#/components/schemas/Boleto"
            }
          }
        },
        "BoletoLogs": {
          "type": "object",
          "properties": {
            "logs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BoletoLog"
              }
            }
          }
        },
        "BoletoLog": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true
            },
            "created": {
              "type": "string",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "readOnly": true
            },
            "errors": {
              "type": "array",
              "readOnly": true,
              "items": {
                "type": "string"
              }
            },
            "boleto": {
              "$ref": "#/components/schemas/Boleto"
            }
          }
        },
        "BoletoLogInfo": {
          "type": "object",
          "properties": {
            "log": {
              "$ref": "#/components/schemas/BoletoLog"
            }
          }
        },
        "BoletoHolmes": {
          "type": "object",
          "properties": {
            "holmes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BoletoSherlock"
              }
            }
          }
        },
        "BoletoSherlock": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true
            },
            "boletoId": {
              "type": "string"
            },
            "result": {
              "type": "string",
              "readOnly": true
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "status": {
              "type": "string",
              "readOnly": true
            },
            "created": {
              "type": "string",
              "format": "date",
              "readOnly": true
            },
            "updated": {
              "type": "string",
              "format": "date",
              "readOnly": true
            }
          },
          "required": [
            "boletoId"
          ]
        },
        "BoletoHolmesInfo": {
          "type": "object",
          "properties": {
            "holmes": {
              "$ref": "#/components/schemas/BoletoSherlock"
            }
          }
        },
        "BoletoHolmesLogs": {
          "type": "object",
          "properties": {
            "logs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BoletoHolmesLog"
              }
            }
          }
        },
        "BoletoHolmesLog": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true
            },
            "created": {
              "type": "string",
              "format": "date",
              "readOnly": true
            },
            "updated": {
              "type": "string",
              "format": "date",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "readOnly": true
            },
            "errors": {
              "type": "array",
              "readOnly": true,
              "items": {
                "type": "string"
              }
            },
            "holmes": {
              "$ref": "#/components/schemas/BoletoSherlock"
            }
          }
        },
        "BoletoHolmesLogInfo": {
          "type": "object",
          "properties": {
            "log": {
              "$ref": "#/components/schemas/BoletoHolmesLog"
            }
          }
        },
        "BrcodePreviews": {
          "type": "object",
          "properties": {
            "previews": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BrcodePreview"
              }
            }
          }
        },
        "BrcodePreview": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "readOnly": true
            },
            "taxId": {
              "type": "string",
              "pattern": "^((\\d{3}\\.\\d{3}\\.\\d{3}\\-\\d{2})|(\\d{11})|(\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}\\-\\d{2})|(\\d{14}))$",
              "readOnly": true
            },
            "bankCode": {
              "type": "string",
              "readOnly": true
            },
            "branchCode": {
              "type": "string",
              "readOnly": true
            },
            "accountNumber": {
              "type": "string",
              "readOnly": true
            },
            "accountType": {
              "type": "string",
              "readOnly": true
            },
            "allowChange": {
              "type": "boolean",
              "readOnly": true
            },
            "amount": {
              "type": "integer",
              "readOnly": true
            },
            "reconciliationId": {
              "type": "string",
              "readOnly": true
            }
          },
          "required": [
            "taxId"
          ]
        },
        "BrcodePayments": {
          "type": "object",
          "properties": {
            "payments": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BrcodePayment"
              }
            }
          }
        },
        "BrcodePayment": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true
            },
            "brcode": {
              "type": "string"
            },
            "taxId": {
              "type": "string",
              "pattern": "^((\\d{3}\\.\\d{3}\\.\\d{3}\\-\\d{2})|(\\d{11})|(\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}\\-\\d{2})|(\\d{14}))$"
            },
            "description": {
              "type": "string"
            },
            "amount": {
              "type": "integer"
            },
            "scheduled": {
              "type": "string",
              "format": "date"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": {
              "type": "string",
              "readOnly": true
            },
            "status": {
              "type": "string",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "readOnly": true
            },
            "fee": {
              "type": "integer",
              "readOnly": true
            },
            "transactionIds": {
              "type": "array",
              "readOnly": true,
              "items": {
                "type": "string"
              }
            },
            "created": {
              "type": "string",
              "format": "date",
              "readOnly": true
            },
            "updated": {
              "type": "string",
              "format": "date",
              "readOnly": true
            }
          },
          "required": [
            "brcode",
            "taxId",
            "description"
          ]
        },
        "BrcodePaymentInfo": {
          "type": "object",
          "properties": {
            "payment": {
              "$ref": "#/components/schemas/BrcodePayment"
            }
          }
        },
        "BrcodePaymentPatch": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string"
            }
          }
        },
        "BrcodePaymentLogs": {
          "type": "object",
          "properties": {
            "logs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BrcodePaymentLog"
              }
            }
          }
        },
        "BrcodePaymentLog": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true
            },
            "created": {
              "type": "string",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "readOnly": true
            },
            "errors": {
              "type": "array",
              "readOnly": true,
              "items": {
                "type": "string"
              }
            },
            "payment": {
              "$ref": "#/components/schemas/BrcodePayment"
            }
          }
        },
        "BrcodePaymentLogInfo": {
          "type": "object",
          "properties": {
            "log": {
              "$ref": "#/components/schemas/BrcodePaymentLog"
            }
          }
        },
        "BoletoPayments": {
          "type": "object",
          "properties": {
            "payments": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BoletoPayment"
              }
            }
          }
        },
        "BoletoPayment": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true
            },
            "amount": {
              "type": "integer",
              "readOnly": true
            },
            "taxId": {
              "type": "string",
              "pattern": "^((\\d{3}\\.\\d{3}\\.\\d{3}\\-\\d{2})|(\\d{11})|(\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}\\-\\d{2})|(\\d{14}))$"
            },
            "line": {
              "type": "string",
              "pattern": "^\\d{5}\\.\\d{5}\\s\\d{5}\\.\\d{6}\\s\\d{5}\\.\\d{6}\\s\\d{1}\\s\\d{14}$"
            },
            "barCode": {
              "type": "string",
              "pattern": "^\\d{44}$"
            },
            "description": {
              "type": "string"
            },
            "scheduled": {
              "type": "string",
              "format": "date"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "fee": {
              "type": "integer",
              "readOnly": true
            },
            "transactionIds": {
              "type": "array",
              "readOnly": true,
              "items": {
                "type": "string"
              }
            },
            "status": {
              "type": "string",
              "readOnly": true
            },
            "created": {
              "type": "string",
              "format": "date",
              "readOnly": true
            }
          },
          "required": [
            "taxId",
            "description"
          ]
        },
        "BoletoPaymentInfo": {
          "type": "object",
          "properties": {
            "payment": {
              "$ref": "#/components/schemas/BoletoPayment"
            }
          }
        },
        "BoletoPaymentLogs": {
          "type": "object",
          "properties": {
            "logs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BoletoPaymentLog"
              }
            }
          }
        },
        "BoletoPaymentLog": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true
            },
            "created": {
              "type": "string",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "readOnly": true
            },
            "errors": {
              "type": "array",
              "readOnly": true,
              "items": {
                "type": "string"
              }
            },
            "payment": {
              "$ref": "#/components/schemas/BoletoPayment"
            }
          }
        },
        "BoletoPaymentLogInfo": {
          "type": "object",
          "properties": {
            "log": {
              "$ref": "#/components/schemas/BoletoPaymentLog"
            }
          }
        },
        "UtilityPayments": {
          "type": "object",
          "properties": {
            "payments": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UtilityPayment"
              }
            }
          }
        },
        "UtilityPayment": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true
            },
            "amount": {
              "type": "integer",
              "readOnly": true
            },
            "line": {
              "type": "string",
              "pattern": "^\\d{5}\\.\\d{5}\\s\\d{5}\\.\\d{6}\\s\\d{5}\\.\\d{6}\\s\\d{1}\\s\\d{14}$"
            },
            "barCode": {
              "type": "string",
              "pattern": "^\\d{44}$"
            },
            "description": {
              "type": "string"
            },
            "scheduled": {
              "type": "string",
              "format": "date"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "fee": {
              "type": "integer",
              "readOnly": true
            },
            "transactionIds": {
              "type": "array",
              "readOnly": true,
              "items": {
                "type": "string"
              }
            },
            "status": {
              "type": "string",
              "readOnly": true
            },
            "created": {
              "type": "string",
              "format": "date",
              "readOnly": true
            }
          },
          "required": [
            "description"
          ]
        },
        "UtilityPaymentInfo": {
          "type": "object",
          "properties": {
            "payment": {
              "$ref": "#/components/schemas/UtilityPayment"
            }
          }
        },
        "UtilityPaymentLogs": {
          "type": "object",
          "properties": {
            "logs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UtilityPaymentLog"
              }
            }
          }
        },
        "UtilityPaymentLog": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true
            },
            "created": {
              "type": "string",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "readOnly": true
            },
            "errors": {
              "type": "array",
              "readOnly": true,
              "items": {
                "type": "string"
              }
            },
            "payment": {
              "$ref": "#/components/schemas/UtilityPayment"
            }
          }
        },
        "UtilityPaymentLogInfo": {
          "type": "object",
          "properties": {
            "log": {
              "$ref": "#/components/schemas/UtilityPaymentLog"
            }
          }
        },
        "PaymentRequests": {
          "type": "object",
          "properties": {
            "requests": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PaymentRequest"
              }
            }
          }
        },
        "PaymentRequest": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true
            },
            "centerId": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "payment": {
              "type": "object"
            },
            "due": {
              "type": "string",
              "format": "date"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "amount": {
              "type": "integer",
              "readOnly": true
            },
            "actions": {
              "type": "array",
              "readOnly": true,
              "items": {
                "$ref": "#/components/schemas/PaymentRequestAction"
              }
            },
            "status": {
              "type": "string",
              "readOnly": true
            },
            "created": {
              "type": "string",
              "format": "date",
              "readOnly": true
            },
            "updated": {
              "type": "string",
              "format": "date",
              "readOnly": true
            }
          },
          "required": [
            "centerId",
            "type",
            "payment"
          ]
        },
        "PaymentRequestAction": {
          "type": "object",
          "properties": {
            "action": {
              "type": "string",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "readOnly": true
            },
            "id": {
              "type": "string",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "readOnly": true
            },
            "pictureUrl": {
              "type": "string",
              "readOnly": true
            },
            "email": {
              "type": "string",
              "readOnly": true
            }
          }
        },
        "Webhook": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true
            },
            "url": {
              "type": "string"
            },
            "subscriptions": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "subscriptions"
          ]
        },
        "Webhooks": {
          "type": "object",
          "properties": {
            "webhooks": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Webhook"
              }
            }
          }
        },
        "WebhookInfo": {
          "type": "object",
          "properties": {
            "webhook": {
              "$ref": "#/components/schemas/Webhook"
            }
          }
        },
        "Events": {
          "type": "object",
          "properties": {
            "events": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "Event": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true
            },
            "isDelivered": {
              "type": "boolean"
            },
            "subscription": {
              "type": "string",
              "readOnly": true
            },
            "created": {
              "type": "string",
              "readOnly": true
            },
            "log": {
              "$ref": "#/components/schemas/BoletoLog"
            }
          }
        },
        "EventInfo": {
          "type": "object",
          "properties": {
            "event": {
              "$ref": "#/components/schemas/Event"
            }
          }
        },
        "EventPatch": {
          "type": "object",
          "properties": {
            "isDelivered": {
              "type": "boolean"
            }
          }
        },
        "DictKeys": {
          "type": "object",
          "properties": {
            "keys": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DictKey"
              }
            }
          }
        },
        "DictKey": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "readOnly": true
            },
            "taxId": {
              "type": "string",
              "readOnly": true
            },
            "ownerType": {
              "type": "string",
              "readOnly": true
            },
            "ispb": {
              "type": "string",
              "pattern": "ˆ^\\d{1,8}$",
              "readOnly": true
            },
            "branchCode": {
              "type": "string",
              "pattern": "ˆ^\\d{4}(\\-\\d{1})?$",
              "readOnly": true
            },
            "accountNumber": {
              "type": "string",
              "pattern": "ˆ^\\d{1,20}$|^\\d{1,19}-\\d{1}$",
              "readOnly": true
            },
            "accountType": {
              "type": "string",
              "readOnly": true
            },
            "status": {
              "type": "string",
              "readOnly": true
            },
            "account_created": {
              "type": "string",
              "format": "date",
              "readOnly": true
            },
            "owned": {
              "type": "string",
              "format": "date",
              "readOnly": true
            },
            "created": {
              "type": "string",
              "format": "date",
              "readOnly": true
            }
          }
        },
        "DictKeyInfo": {
          "type": "object",
          "properties": {
            "key": {
              "$ref": "#/components/schemas/DictKey"
            }
          }
        },
        "Workspace": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true
            },
            "username": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "username",
            "name"
          ]
        },
        "Workspaces": {
          "type": "object",
          "properties": {
            "workspaces": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Workspace"
              }
            }
          }
        },
        "WorkspaceInfo": {
          "type": "object",
          "properties": {
            "workspace": {
              "$ref": "#/components/schemas/Workspace"
            }
          }
        },
        "PublicKeys": {
          "type": "object",
          "properties": {
            "publicKeys": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PublicKey"
              }
            }
          }
        },
        "PublicKey": {
          "type": "object",
          "properties": {
            "content": {
              "type": "string",
              "readOnly": true
            },
            "created": {
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    }
  }
